// Generated by CoffeeScript 1.7.1
var fs, path, vhosted;

path = require('path');

fs = require('fs');

vhosted = require('vhosted');

module.exports = function($dir, $ext, $config, $injector, $emitter, $env) {
  var boostrap, bootstrap, listen, relativeAppDir, server, vhosts;
  relativeAppDir = path.relative(__dirname, $dir.app);
  if ($config.router.strict) {
    server.enable('strict routing');
  }
  if ($config.router.caseSensitive) {
    server.enable('case sensitive routing');
  }
  boostrap = fs.existsSync("" + $dir.app + "/bootstrap" + $ext);
  if (bootstrap) {
    bootstrap = require("" + relativeAppDir + "/bootstrap");
  }
  if (bootstrap && (bootstrap.vhosts != null)) {
    server = require('express')();
    vhosts = $injector.resolve(bootstrap.vhosts);
    server = vhosted(server, $dir.project, vhosts);
  } else {
    server = $injector.get('$app');
  }
  $injector.register('$server', function() {
    return server;
  });
  listen = function() {
    var http, port;
    if (bootstrap && (bootstrap.server != null)) {
      server = $injector.resolve(require("" + relativeAppDir + "/bootstrap").server);
    } else {
      http = require('http');
      port = process.env.PORT || $config.port;
      server = http.createServer(server).listen(port, function() {
        return console.log('Server listening on port ' + port);
      });
    }
    return server.on('listening', function() {
      return fs.writeFileSync("" + $dir.project + "/.tmp/reload", 'reload');
    });
  };
  if ($env === 'production') {
    return $emitter.on('mongoose-connected', function() {
      return listen();
    });
  } else {
    return listen();
  }
};
